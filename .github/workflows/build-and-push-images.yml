name: Build And Push Images

on:
  workflow_call:
    inputs:
      ref:
        description: The branch, tag or SHA to checkout
        required: true
        type: string
      environment:
        description: Environment to build images against
        type: string
        required: true

permissions:
  packages: write
  contents: read
  id-token: write
  attestations: write

env:
  IMAGE_NAME: ghcr.io/${{ github.actor }}/rnd

jobs:
  build_image:
    name: Build And Push Image
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get The Current Tag From The Branch
        id: current-tag
        run: |
          echo "VALUE=$(git describe --tags --candidates=0 2>/dev/null)" >> "$GITHUB_OUTPUT"

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          flavor: |
            latest=false
          images: |
            ${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ steps.current-tag.outputs.VALUE }}

      - name: Thow Error If No Tags Is Generated
        if: ${{ steps.meta.outputs.tags == '[]' }}
        run: |
            echo "::error::Tags are not set"

      - name: Build and push the image
        if: ${{ vars.ACTIONS_STEP_DEBUG != 'true' }}
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: rnd/Dockerfile
          push: ${{ vars.ACTIONS_STEP_DEBUG != 'true' }}
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}
          build-args: |
            IMAGETAG=${{ matrix.phpTag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation (GitHub)
        if: ${{ vars.ACTIONS_STEP_DEBUG != 'true' }}
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.build.outputs.digest }}
          github-token: ${{ github.token }}
          push-to-registry: true
