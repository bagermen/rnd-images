name: ci / pr check
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - main

jobs:
  list_projects:
    if: ${{ github.event.pull_request.draft == false && !contains(join(github.event.pull_request.labels.*.name), 'autorelease') }}
    runs-on: ubuntu-latest
    environment: development
    outputs:
      matrix: ${{ steps.project-list.outputs.matrix }}
    steps:
      - uses: yakubique/list-artifacts@v1.1
        id: artefact-list
        with:
          name: '*.yml'
      - uses: MichaelMelena/remove-artifacts@v1
        with:
          artifacts: ${{ steps.artefact-list.outputs.result }}
      - uses: mmastrac/mmm-matrix@v1
        id: project-list
        with:
          input: |
            - artifact: base.yml
              path: base
              src_files: |
                '!**.md'
                '!docs/**'
  test_changes:
    needs: [list_projects]
    if: ${{ !cancelled() && !failure() }}
    strategy:
      matrix:
        include: ${{ fromJSON(needs.list_projects.outputs.matrix) }}
    uses: ./.github/workflows/_wc_test_pr_changes.yml
    with:
      environment: development
      artifact: ${{ matrix.artifact }}
      path: ${{ matrix.path }}
      src_files: ${{ matrix.src_files }}

  check_changes:
    if: ${{ !cancelled() && !failure() }}
    needs: [list_projects, test_changes]
    runs-on: ubuntu-latest
    outputs:
      path: ${{ steps.project.outputs.value }}
      src_modified: ${{ fromJson(steps.file.outputs).src_modified }}
      test_modified: ${{ fromJson(steps.file.outputs).test_modified }}
    strategy:
      matrix: ${{ fromJSON(needs.list_projects.outputs.matrix) }}
    steps:
      - uses: streetsidesoftware/action-set-output@v1
        id: project
        with:
          value: ${{ matrix.path }}
      - uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.artifact }}
      - uses: juliangruber/read-file-action@v1
        id: file
        with:
          path: ${{ matrix.artifact }}
  # test_changed_project:
  #   environment: development
  #   if: ${{ github.event.pull_request.draft == false && !contains(join(github.event.pull_request.labels.*.name), 'autorelease') }}
  #   runs-on: ubuntu-latest
  #   outputs:
  #     base: ${{ steps.base.outputs.any_modified }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - id: base
  #       uses: tj-actions/changed-files@v45
  #       with:
  #         since_last_remote_commit: true
  #         path: base
  #         files_ignore: |
  #           **.md
  #           docs/**
  #     - id: base-all-files
  #       uses: tj-actions/changed-files@v45
  #       with:
  #         since_last_remote_commit: true
  #         path: base
  #     - id: last_base_ref_status
  #       if: ${{ steps.base.outputs.any_modified == 'false' && steps.base-all-files.outputs.any_modified == 'true' }}
  #       uses: danieldeichfuss/get-status@v0.0.10
  #       with:
  #           ref: ${{ github.event.pull_request.head.sha }}
  #     - if: ${{ steps.base.outputs.any_modified == 'false' && steps.base-all-files.outputs.any_modified == 'true' && steps.last_base_ref_status.outputs.all-checks-passed == 'false' }}
  #       uses: actions/github-script@v7
  #       with:
  #         script:  core.setFailed('base build failed')

  test_base_image:
    # needs: [test_changed_project]
    # if: ${{ !cancelled() && !failure() && needs.test_changed_project.outputs.base == 'true' }}
    needs: ['check_changes']
    if: ${{ !cancelled() && !failure() && needs.check_changes.outputs.path == 'base' && needs.check_changes.outputs.src_modified == 'true' }}
    uses: ./.github/workflows/_wc_build_base_image.yml
    permissions:
      packages: write
      contents: read
      id-token: write
      attestations: write
    secrets: inherit
    with:
      ref: ${{ github.ref }}
      environment: development
      push: false

