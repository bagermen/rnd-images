name: 'Create Tag'
inputs:
  tag:
    type: string
    required: true
  tag-message:
    type: string
    required: true
  sha:
    type: string
    required: true
runs:
  using: "composite"
  steps:
    - uses: actions/github-script@v7
      with:
        script: |
          try {
            await github.rest.git.deleteRef({
              ...context.repo,
              ref: 'tags/${{ inputs.tag }}'
            });
          } catch (error) {
            if (error.response.status !== 422) {
              core.setFailed(`Failed to delete tag object (status=${error.response.status}, message="${error.response.data.message}")`);
              return;
            }
          }
          let tag_rsp;
          try {
            tag_rsp = await github.rest.git.createTag({
              ...context.repo,
              tag: '${{ inputs.tag }}',
              message: '${{ inputs.tag-message }}',
              type: 'commit',
              object: '${{ inputs.sha }}'
            });
          } catch (error) {
            core.setFailed(`Failed to create tag object (status=${error.response.status}, message="${error.response.data.message}")`);
            return;
          }

          try {
            await github.rest.git.createRef({
              ...context.repo,
              ref: 'refs/tags/${{ inputs.tag }}',
              sha: tag_rsp.data.sha
            });
          } catch (error) {
            core.setFailed(`Failed to create tag ref(status=${error.response.status}, message="${error.response.data.message}")`);
          }



